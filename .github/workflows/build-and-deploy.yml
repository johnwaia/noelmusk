name: Build and Deploy JAR

# Trigger the workflow when code is pushed to the main branch
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Check out the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up JDK (OpenJDK 21)
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    # Cache dependencies to speed up the build process
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Build the JAR using Maven
    - name: Build JAR with Maven
      run: mvn clean package -Pproduction -Dvaadin.force.production.build=true -DskipTests

    # Upload the JAR as an artifact (optional)
    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-app-jar
        path: target/*.jar

    # Verify the contents of the target directory
    - name: List target directory
      run: ls -la target/

    # Deploy the JAR to the remote server via SSH
    - name: Deploy JAR to remote server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        port: 22
        script: |
          scp target/*.jar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/opt/tweetx/

