name: Build and Deploy JAR

# Trigger the workflow when code is pushed to the main branch
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    # Cache dependencies to speed up the build process
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Inject the keystore password environment variable
    - name: Set KEY_STORE_PASSWORD environment variable
      run: echo "KEY_STORE_PASSWORD=${{ secrets.KEY_STORE_PASSWORD }}" >> $GITHUB_ENV

    # Build the JAR using Maven
    - name: Build JAR with Maven
      run: mvn clean package -Pproduction -DskipTests
    
    - name: Check for JAR file
      run: |
        ls ./target/
        if ls ./target/*.jar 1> /dev/null 2>&1; then
          echo "JAR file exists.";
        else
          echo "JAR file not found. Exiting.";
          exit 1;
        fi

    # Deploy the JAR to the remote server via SSH
    - name: Deploy JAR to remote server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        source: "./target/antix-2025.jar"
        target: "/opt/tweetx/"
        strip_components: 1
